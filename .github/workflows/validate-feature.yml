---
name: Validate feature

on:
  push:
    branches:
      - 'build/*'
      - 'chore/*'
      - 'ci/*'
      - 'docs/*'
      - 'feat/*'
      - 'fix/*'
      - 'perf/*'
      - 'refactor/*'
      - 'revert/*'
      - 'style/*'
      - 'test/*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prettier
        run: npx prettier --check .

  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Run ESLint
        run: yarn lint.es

  stylelint:
    name: Stylelint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Style Lint
        run: yarn lint.style

  commitlint:
    name: CommitLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Commit Lint
        run: yarn lint.commit

  #  test:
  #    name: Test
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Checkout repository
  #        uses: actions/checkout@v3
  #
  #      - name: Set up Node.js
  #        uses: actions/setup-node@v3
  #        with:
  #          node-version: 'lts/*'
  #          cache: 'yarn'
  #
  #      - name: Install dependencies
  #        run: yarn
  #
  #      - name: Test
  #        run: yarn test

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'yarn'

      - name: Install dependencies
        run: |
          yarn --prod
          yarn add @angular/cli

      - name: Build
        run: yarn build

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist
#  create-feature-branch-workspace:
#    name: Create feature branch workspace
#    uses: codingones/github-actions-workflows/.github/workflows/create-terraform-cloud-workspace-for-aws-ephemeral-environment.terraform.yml@main
#    with:
#      product: 'taxi-aymeric'
#      service: 'client'
#      branch: ${{ github.event.ref }}
#    secrets:
#      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
#      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#
#  prepare-terraform-variables-file-content:
#    name: Prepare terraform variables file content
#    runs-on: ubuntu-latest
#    needs:
#      - create-feature-branch-workspace
#    outputs:
#      tf-vars: ${{ steps.tf-vars.outputs.content }}
#    steps:
#      - name: Set terraform variables file content in TF_VARS environment variable
#        id: tf-vars
#        run: >-
#          BASE_64_CONTENT=$(echo -en
#          '{
#            "product": "taxi-aymeric",
#            "service": "client-${{ needs.create-feature-branch-workspace.outputs.tf-workspace }}",
#            "enable_bucket_website": true
#          }'
#          | base64
#          | tr -d \\n)
#
#          echo content=$BASE_64_CONTENT>>$GITHUB_OUTPUT

#  deploy-feature-branch-environment:
#    name: Deploy feature branch environment
#    needs:
#      - create-feature-branch-workspace
#      - prepare-terraform-variables-file-content
#    uses: codingones/github-actions-workflows/.github/workflows/apply.terraform.yml@main
#    with:
#      infrastructure-repository: 'romain-cambonie/taxi-client-infrastructure'
#      workspace-name: ${{ needs.create-feature-branch-workspace.outputs.tf-workspace }}
#      json-base-64-tf-vars: ${{ needs.prepare-terraform-variables-file-content.outputs.tf-vars }}
#    secrets:
#      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}

#  publish-build-files:
#    runs-on: ubuntu-latest
#    needs:
#      - build
#      - create-feature-branch-workspace
#      - deploy-feature-branch-environment
#    steps:
#      - name: Download build
#        uses: actions/download-artifact@v3
#        with:
#          name: build
#
#      - name: Publish
#        uses: jakejarvis/s3-sync-action@v0.5.1
#        with:
#          args: --delete
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_S3_BUCKET: taxi-aymeric-client-${{ needs.create-feature-branch-workspace.outputs.tf-workspace }}
#          SOURCE_DIR: 'taxi'
#
#      - name: See Taxi Aymeric client URL
#        run: |
#          echo http://taxi-aymeric-client-${{ needs.create-feature-branch-workspace.outputs.tf-workspace }}.s3-website.eu-west-3.amazonaws.com
